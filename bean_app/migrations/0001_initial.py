# Generated by Django 5.1.6 on 2025-03-12 17:13

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(max_length=15)),
                ('is_verified', models.BooleanField(default=False)),
                ('otp', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BeanBag',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='bean_app.basemodel')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('picture', models.ImageField(blank=True, null=True, upload_to='beanbag_images')),
                ('category', models.CharField(choices=[('CLASSIC', 'Classic Bean Bags'), ('SOCCER', 'Soccer Bean Bags'), ('CHAIRS', 'Chair Bean Bags'), ('Refillers', 'Refillers'), ('LUXURY', 'Luxury Bean Bags')], default='CLASSIC', max_length=20)),
            ],
            bases=('bean_app.basemodel',),
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='bean_app.basemodel')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('hex_code', models.CharField(max_length=7, unique=True)),
            ],
            bases=('bean_app.basemodel',),
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='bean_app.basemodel')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            bases=('bean_app.basemodel',),
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='bean_app.basemodel')),
                ('name', models.CharField(max_length=70, unique=True)),
            ],
            bases=('bean_app.basemodel',),
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='bean_app.basemodel')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            bases=('bean_app.basemodel',),
        ),
        migrations.CreateModel(
            name='BeanBagVariant',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='bean_app.basemodel')),
                ('price', models.FloatField(help_text='Price in Rupees')),
                ('beanbag_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='bean_app.beanbag')),
                ('color_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bean_app.color')),
                ('size_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bean_app.size')),
            ],
            bases=('bean_app.basemodel',),
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='bean_app.basemodel')),
                ('quantity', models.PositiveIntegerField()),
                ('is_order_placed', models.BooleanField(default=False)),
                ('beanbag_variant_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bean_app.beanbagvariant')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('material_object', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bean_app.material')),
            ],
            bases=('bean_app.basemodel',),
        ),
        migrations.AddField(
            model_name='beanbag',
            name='material_objects',
            field=models.ManyToManyField(to='bean_app.material'),
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='bean_app.basemodel')),
                ('address', models.TextField()),
                ('phone', models.CharField(max_length=20)),
                ('payment_method', models.CharField(choices=[('COD', 'Cash On Delivery'), ('ONLINE', 'Online Payment')], default='COD', max_length=15)),
                ('rzp_order_id', models.CharField(max_length=100, null=True)),
                ('is_paid', models.BooleanField(default=False)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
            bases=('bean_app.basemodel',),
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='bean_app.basemodel')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('price', models.FloatField()),
                ('beanbag_variant_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bean_app.beanbagvariant')),
                ('order_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orderitems', to='bean_app.order')),
            ],
            bases=('bean_app.basemodel',),
        ),
        migrations.AddField(
            model_name='beanbag',
            name='tag_objects',
            field=models.ManyToManyField(to='bean_app.tag'),
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('beanbag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='bean_app.beanbag')),
            ],
            options={
                'unique_together': {('beanbag', 'user')},
            },
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('basemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='bean_app.basemodel')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('beanbag_variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wishlisted_by', to='bean_app.beanbagvariant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wishlist', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'beanbag_variant')},
            },
            bases=('bean_app.basemodel',),
        ),
    ]
